rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() { return request.auth != null; }
    function isOwner(userId) { return isAuthenticated() && request.auth.uid == userId; }
    function getUserData() { return get(/databases/$(database)/documents/users/$(request.auth.uid)).data; }
    function hasRole(role) { return isAuthenticated() && getUserData().role == role; }
    function isNotBanned() { return isAuthenticated() && getUserData().banned != true; }
    function isAdmin() { return hasRole('admin'); }
    function isCreator() { return hasRole('creator'); }
    function isReviewer() { return hasRole('reviewer'); }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId) &&
        request.resource.data.keys().hasAll(['username','email','role']) &&
        request.resource.data.username.size() >= 3 &&
        request.resource.data.username.size() <= 20 &&
        request.resource.data.role in ['creator','reviewer'];
      allow update: if (isOwner(userId) || isAdmin()) && isNotBanned();
      allow delete: if isAdmin();
    }

    match /skins/{skinId} {
      allow read: if true;
      allow create: if isCreator() && isNotBanned() &&
        request.resource.data.authorId == request.auth.uid &&
        request.resource.data.name.size() >= 3 &&
        request.resource.data.name.size() <= 50 &&
        request.resource.data.previewData.size() < 100000 &&
        request.resource.data.originalData.size() < 100000;
      allow update: if (isOwner(resource.data.authorId) || isAdmin()) && isNotBanned();
      allow delete: if isOwner(resource.data.authorId) || isAdmin();

      match /ratings/{userId} {
        allow read: if isAuthenticated();
        allow create: if (isReviewer() || isAdmin()) && isNotBanned() &&
          request.auth.uid == userId &&
          request.resource.data.score >= 0 && request.resource.data.score <= 90 &&
          request.resource.data.score is int;
        allow update: if isOwner(userId) && isNotBanned() &&
          request.resource.data.score >= 0 && request.resource.data.score <= 90;
        allow delete: if isOwner(userId) || isAdmin();
      }
    }

    match /stats/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}

